name: CI

on: [push, pull_request]

env:
  DATABASE_URI: postgres://postgres:postgres@postgres:5432/vetka?sslmode=disable

jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1.19

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: make build

      - name: Run unit tests
        run: make unit-tests

  lint:
    runs-on: ubuntu-latest
    container: golang:1.19

    steps:
      - uses: actions/checkout@v3

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51.1

  integration-tests:
    runs-on: ubuntu-latest
    container: golang:1.19

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vetka
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Install golang-migrate
        run: go install -tags "postgres" github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Run integration tests
        run: make int-tests

      - name: Test migrations down
        run: migrate -database ${DATABASE_URI} -path ./migrations down -all
